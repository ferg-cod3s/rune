# GoReleaser v2 configuration
version: 2
before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    main: ./cmd/rune
    binary: rune
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w -X github.com/ferg-cod3s/rune/internal/commands.version={{.Version}} -X github.com/ferg-cod3s/rune/internal/telemetry.version={{.Version}} -X github.com/ferg-cod3s/rune/internal/telemetry.segmentWriteKey={{.Env.RUNE_SEGMENT_WRITE_KEY}} -X github.com/ferg-cod3s/rune/internal/telemetry.sentryDSN={{.Env.RUNE_SENTRY_DSN}}

archives:
  - formats: [tar.gz]
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
    - goos: windows
      formats: [zip]
    files:
      - README.md
      - LICENSE
      - completions/*

checksum:
  name_template: 'checksums.txt'

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

homebrew_casks:
  - name: rune
    homepage: https://github.com/ferg-cod3s/rune
    description: "Ancient wisdom for modern workflows - A developer-first CLI productivity platform"
    license: MIT
    repository:
      owner: ferg-cod3s
      name: homebrew-tap
      branch: main
      token: "{{ .Env.HOMEBREW_TAP_PAT }}"
    directory: Formula
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_message_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    install: |
      bin.install "rune"

      # Install shell completions
      bash_completion.install "completions/rune.bash" => "rune"
      zsh_completion.install "completions/rune.zsh" => "_rune"
      fish_completion.install "completions/rune.fish"

      # Create default config directory
      (etc/"rune").mkpath
    test: |
      system "#{bin}/rune", "--version"
      system "#{bin}/rune", "--help"
    dependencies:
      - name: git
        type: optional
    caveats: |
      To get started with rune:
        1. Initialize your configuration: rune init --guided
        2. Start your workday: rune start
        3. Check status: rune status
        4. End your workday: rune stop

      Configuration file location: ~/.rune/config.yaml

      For more information, visit: https://github.com/ferg-cod3s/rune

nfpms:
  - file_name_template: '{{ .ProjectName }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    homepage: https://github.com/ferg-cod3s/rune
    description: A productivity CLI tool for developers
    maintainer: John Ferguson <your-email@example.com>
    license: MIT
    vendor: John Ferguson
    formats:
      - deb
      - rpm
    contents:
      - src: ./completions/rune.bash
        dst: /usr/share/bash-completion/completions/rune
        file_info:
          mode: 0644
      - src: ./completions/rune.zsh
        dst: /usr/share/zsh/site-functions/_rune
        file_info:
          mode: 0644
      - src: ./completions/rune.fish
        dst: /usr/share/fish/completions/rune.fish
        file_info:
          mode: 0644
